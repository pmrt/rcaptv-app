.timeline-wrapper {
  position: fixed;
  left: 0;
  right: 0;
  bottom: 0;
  padding: 100px $page-padding 14px;

  &.with-background {
    background-color: var(--color-silver-black);
    background: linear-gradient(
      0deg,
      rgba(var(--rgb-silver-black), 1) 0%,
      rgba(var(--rgb-silver-black), 1) 40%,
      rgba(var(--rgb-silver-black), 0.7) 60%,
      rgba(var(--rgb-silver-black), 0) 100%
    );
  }
}

.timeline-bar {
  position: relative;
  width: 100%;

  .timeline-box {
    --five-min-px-size: 25px;
    $box-height: 50px;
    $border: 4px;
    border: 4px solid var(--color-rose);
    position: relative;
    height: $box-height;
    border-radius: 12px;
    background-image: url("../../assets/timebars.svg");
    background-size: var(--five-min-px-size);
    background-repeat: repeat no-repeat;
    background-position-y: bottom;
    background-position-x: 0;
  }
}

.outer {
  position: relative;
  width: 100%;
  height: 100%;
  overflow: hidden;
}

.clip-bar {
  position: absolute;
  height: 100%;
  min-width: 3px;
}

.cursor-marker {
  $size: 6px;
  position: absolute;
  top: -$size + 1px;
  transform: translateX(-5px);
  border-left: $size solid transparent;
  border-right: $size solid transparent;
  border-top: $size solid var(--color-purple);
  transition: transform 50ms ease-in-out;
}

.cursor {
  --threshold-width: 100px;
  $area-border-size: 6px;
  $area-border: #{$area-border-size} solid var(--color-light-purple);
  will-change: left;
  $extra-height: 10px;
  $width: 2px;
  position: absolute;
  height: calc(100% + $extra-height);
  top: -$extra-height;
  width: $width;
  background-color: var(--color-purple);
  transform: scale(1);
  transition: transform 50ms ease-in-out;
  z-index: 1;

  & > .cursor-threshold-area {
    position: absolute;
    height: calc(100% - $extra-height);
    top: $extra-height;
    background-color: rgba(var(--rgb-light-purple), 25%);
    width: var(--threshold-width);
    border-radius: 5px;
    transition: background-color 80ms ease-in-out;
  }
  & > .cursor-threshold-area-left {
    left: calc(-1 * var(--threshold-width));
    border-left: $area-border;
  }
  & > .cursor-threshold-area-right {
    border-right: $area-border;
  }
  &.active > .cursor-threshold-area {
    background-color: rgba(var(--rgb-light-purple), 50%);
  }

  /*
  &::before {
    $size: 8px;
    content: "";
    position: absolute;
    top: 0px;
    left: -$size + $width/2;
    border-left: $size solid transparent;
    border-right: $size solid transparent;
    border-top: $size solid #000;
  }*/
}

.cursor-threshold-handler {
  $size: 6px;
  $arrow-size: 2px;
  $arrow-gap: 15px;
  bottom: -15px;
  height: $size;
  width: $size;
  position: absolute;
  cursor: grab;
  z-index: 2;
  background: radial-gradient(
    circle,
    var(--color-light-purple) 100%,
    var(--color-light-purple) 100%
  );
  border-radius: 100%;
  transition: background 80ms ease-in-out, transform 80ms ease-in-out;
  transform: scale(1) translateX(-2px);

  &:hover {
    transform: scale(2) translateX(-1px);
  }

  &::after,
  &::before {
    opacity: 0;
    transition: opacity 150ms ease-in-out;
    top: -40%;
    width: $arrow-size;
    height: $arrow-size;
    position: absolute;
    transform: scale(0.5);
  }
  &::after {
    content: ">";
    left: $arrow-gap - $arrow-size;
  }
  &::before {
    content: "<";
    right: $arrow-gap + $arrow-size;
  }
  &:hover::after,
  &:hover::before {
    opacity: 1;
  }

  &.active {
    background: radial-gradient(
      circle,
      transparent 40%,
      var(--color-light-purple) 60%
    );
    cursor: col-resize;
    transform: scale(2) translateX(-1px);
  }
}
